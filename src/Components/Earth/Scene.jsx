/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 scene.gltf
Author: PatelDev (https://sketchfab.com/PatelDev)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-f7a76c63ff1846afb2d606e5c8369c15
Title: Earth
*/

import React, { useRef } from 'react'
import { PresentationControls, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useSpring, animated, config } from '@react-spring/three'



export default function Earth(props) {
  
  const getRotation = (region) => {
    if (region === 'Europe') {
      return [0.7,-2.2,0];
    } else if (region === 'Asia') {
      return [0.4,3.3,0];
    } else if (region === 'Africa') {
      return [0,-1.8,0];
    } else if (region === 'Americas') {
      return [0.4,-0.2,0];
    } else if (region === 'Oceania') {
      return [-0.1,2.5,0];
    } else {
      return [0.2, 0, 0];
    }
  };
  
  const rotationValue = getRotation(props.region);
  
  const { rotation } = useSpring({
    rotation: rotationValue,
    config: config.gentle
  });


const Earth = useRef()
  useFrame(({clock}) => {
    const position = Earth.current.position;
  
    const newY = Math.sin(clock.getElapsedTime()) * 0.25;

    position.setY(newY);
  })
  const { nodes, materials } = useGLTF('/earth/scene.gltf')
  return (
    <animated.group {...props} dispose={null} ref={Earth} rotation={rotation}>
      <PresentationControls snap={true}>
      <mesh geometry={nodes.Object_4.geometry} material={materials['Scene_-_Root']} scale={1.5} />
      </PresentationControls>
    </animated.group>
  )
}

useGLTF.preload('/earth/scene.gltf')
